version: '3.5'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "172.17.0.1"
##      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
##      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
##      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "account-events:1:1"
    depends_on:
      - zookeeper

  postgres_exchange:
    image: postgres:12.17-alpine3.19
    container_name: postgres_exchange
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./opt/docker_postgres/dbdata:/var/lib/postgresql/data
      - ./opt/docker_postgres/postgres_data/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - ./opt/docker_postgres/postgres_data/init-database2.sh:/docker-entrypoint-initdb.d/init-database2.sh
      - ./opt/docker_postgres/postgres_data/init-database3.sh:/docker-entrypoint-initdb.d/init-database3.sh



  eureka-server:
    build: ./eureka-service
    container_name: eureka-service
    hostname: eureka-service
    ports:
      - "8761:8761"

  currency-service:
    build: ./rate_currency_service-master
    container_name: currency-rate-service-1
    hostname: currency-rate-service-1
    ports:
      - "8084:8084"
    environment:
      EUREKA_HOST: "172.17.0.1"

  processing-service:
    build: ./exchange-processing-service
    container_name: processing-service
    hostname: processing-service
    ports:
      - 8090:8090
    environment:
      DB_HOST: "172.17.0.1"
      KAFKA_HOST: "172.17.0.1"
      EUREKA_HOST: "172.17.0.1"
    depends_on:
      - postgres_exchange
      - zookeeper
      - kafka

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    hostname: gateway-service
    ports:
      - 8080:8080
    environment:
      EUREKA_HOST: "172.17.0.1"
      PROCESSING_URL: "http://172.17.0.1:8090"
      CURRENCY_URL: "http://172.17.0.1:8084"
      AUTH_URL: "http://172.17.0.1:9797"
      HISTORY_URL: "http://172.17.0.1:8015"
    depends_on:
     - eureka-server

  identity-service:
    build: ./identity-service-new
    container_name: identity-service
    hostname: identity-service
    ports:
      - 9797:9797
    environment:
      EUREKA_HOST: "172.17.0.1"
      DB_HOST: "172.17.0.1"
    restart: unless-stopped
    depends_on:
      - eureka-server

  history-service:
    build: ./history-service
    container_name: history-service
    hostname: history-service
    ports:
      - 8015:8015
    environment:
      DB_HOST: "172.17.0.1"
      KAFKA_HOST: "172.17.0.1"
      EUREKA_HOST: "172.17.0.1"
    depends_on:
      - eureka-server
      - kafka
      - processing-service

  notification-bot:
    build: ./notification-bot
    container_name: notification-bot
    hostname: notification-bot
    ports:
      - 8077:8077
    volumes:
      - .\notification-bot\conf\telegram.token:/conf/telegram.token
    environment:
      KAFKA_HOST: "172.17.0.1"
      TELEGRAM_BOT_TOKEN: .\conf\telegram.token
      IDENTITY_SERVICE: "http://172.17.0.1:9797/auth/token"
    depends_on:
      - kafka
      - processing-service








